{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/DoubleColumn.js","webpack://gatsby-starter-default/./src/components/PhotoHero.js","webpack://gatsby-starter-default/./src/pages/services.js"],"names":["background","flipped","columnOneContent","columnTwoContent","ContentWrapper","FlippedColumnOneContainer","ColumnContainer","ColumnOneContainer","styled","props","TextWrapper","ColumnImage","GatsbyImage","heading","headerBg","HeroContainer","HeroContent","HeroItems","HeroH1","useStaticQuery","allContentfulComponentPage","allContentfulService","node","edges","seo","sections","photoHero","services","serviceImage","service","image","hero","gatsbyImageData","alt","title","file","url","forEach","item","index","push","description","ServiceButton","to","slug","primary","setServices","Button"],"mappings":"4NAkBA,KAdqB,SAAC,GAAiE,IAA/DA,EAA8D,EAA9DA,WAAYC,EAAkD,EAAlDA,QAASC,EAAyC,EAAzCA,iBAAkBC,EAAuB,EAAvBA,iBAC7D,OAAOF,EACL,gBAACG,EAAD,CAAgBJ,WAAYA,GAC1B,gBAACK,EAAD,KAA4BH,GAC5B,gBAACI,EAAD,KAAkBH,IAGpB,gBAACC,EAAD,CAAgBJ,WAAYA,GAC1B,gBAACO,EAAD,KAAqBL,GACrB,gBAACI,EAAD,KAAkBH,KAOxB,IAAMC,EAAiBI,oBAAH,wEAAGA,CAAH,uJACE,SAACC,GAAD,OAAWA,EAAMT,cAUjCM,EAAkBE,oBAAH,yEAAGA,CAAH,sNAgBfD,GAAqBC,QAAOF,GAAV,uFAAGE,CAAH,mDAMlBH,GAA4BG,QAAOF,GAAV,8FAAGE,CAAH,cAIlBE,EAAcF,oBAAH,qEAAGA,CAAH,6KAgBXG,GAAcH,QAAOI,KAAV,gFAAGJ,CAAH,8E,uDC1DxB,IAZkB,SAAC,GAA2B,IAAzBK,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAC5B,OACE,gBAACC,EAAD,CAAeD,SAAUA,GACvB,gBAACE,EAAD,KACE,gBAACC,EAAD,KACE,gBAACC,EAAD,KAASL,OASnB,IAAME,EAAgBP,oBAAH,gEAAGA,CAAH,igBAOT,SAACC,GAAD,OAAWA,EAAMK,YAwBrBE,EAAcR,oBAAH,8DAAGA,CAAH,kGAOXS,EAAYT,oBAAH,4DAAGA,CAAH,yLAcTU,EAASV,mBAAH,yDAAGA,CAAH,+F,0HCgDZ,UAvGiB,WACf,OAA6DW,oBAAe,aAApEC,EAAR,EAAQA,2BAA4BC,EAApC,EAAoCA,qBAmD9BC,EAAOF,EAA2BG,MAAM,GAAGD,KAC3CE,EAAMF,EAAKG,SAAS,GACpBC,EAAYJ,EAAKG,SAAS,GAC1BE,EAAWN,EAAqBE,MAchCK,EAAe,SAACC,GACpB,OACE,gBAAC,KAAD,CACEC,MAAOD,EAAQP,KAAKS,KAAKjB,SAASkB,gBAClCC,IAAKJ,EAAQP,KAAKY,MAAQ,YAoBhC,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKV,IAAKA,IACV,gBAAC,IAAD,CAAWX,QAAQ,WAAWC,SAAUY,EAAUZ,SAASqB,KAAKC,MAlBpE,SAAqBT,GACnB,IAAMF,EAAW,GAWjB,OAVAE,EAASU,SAAQ,SAACC,EAAMC,GAvBN,IAACV,EAwBjBJ,EAASe,KACP,gBAAC,KAAD,CACExC,WAAYuC,EAAQ,EAAI,UAAY,QACpCtC,QAASsC,EAAQ,EACjBrC,kBA5Ba2B,EA4BiBS,EA1BlC,gBAAC,KAAD,KACE,0BAAKT,EAAQP,KAAKY,OAClB,yBAAIL,EAAQP,KAAKmB,YAAYA,aAC7B,gBAACC,EAAD,CAAeC,GAAId,EAAQP,KAAKsB,KAAMC,QAAQ,QAA9C,gBAwBE1C,iBAAkByB,EAAaU,SAI9Bb,EAQJqB,CAAYnB,KAOnB,IAAMe,GAAgBlC,QAAOuC,KAAV,8EAAGvC,CAAH","file":"component---src-pages-services-js-66797916e3cb13af1de5.js","sourcesContent":["import { GatsbyImage } from \"gatsby-plugin-image\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst DoubleColumn = ({ background, flipped, columnOneContent, columnTwoContent }) => {\n  return flipped ? (\n    <ContentWrapper background={background}>\n      <FlippedColumnOneContainer>{columnOneContent}</FlippedColumnOneContainer>\n      <ColumnContainer>{columnTwoContent}</ColumnContainer>\n    </ContentWrapper>\n  ) : (\n    <ContentWrapper background={background}>\n      <ColumnOneContainer>{columnOneContent}</ColumnOneContainer>\n      <ColumnContainer>{columnTwoContent}</ColumnContainer>\n    </ContentWrapper>\n  );\n};\n\nexport default DoubleColumn;\n\nconst ContentWrapper = styled.div`\n  background-color: ${(props) => props.background};\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  padding: 5rem 2rem;\n\n  @media screen and (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst ColumnContainer = styled.div`\n  margin: 2rem 4rem;\n  position: relative;\n  padding-top: 1rem;\n  padding-right: 2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (max-width: 768px) {\n    text-align: center;\n    padding: 0;\n    margin: 2rem 0rem;\n  }\n`;\n\nconst ColumnOneContainer = styled(ColumnContainer)`\n  @media screen and (max-width: 768px) {\n    order: 2;\n  }\n`;\n\nconst FlippedColumnOneContainer = styled(ColumnContainer)`\n  order: 2;\n`;\n\nexport const TextWrapper = styled.div`\n  justify-content: center;\n  align-items: center;\n\n  h2 {\n    margin-bottom: 1rem;\n    font-size: clamp(1rem, 5vw, 2rem);\n  }\n\n  p {\n    color: #3b3b3b;\n    margin-bottom: 2rem;\n    font-size: clamp(1rem, 1.5vw, 1.5rem);\n  }\n`;\n\nexport const ColumnImage = styled(GatsbyImage)`\n  display: flex;\n  border-radius: 10px;\n  width: 100%;\n  max-width: 550px;\n  height: auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst PhotoHero = ({ heading, headerBg }) => {\n  return (\n    <HeroContainer headerBg={headerBg}>\n      <HeroContent>\n        <HeroItems>\n          <HeroH1>{heading}</HeroH1>\n        </HeroItems>\n      </HeroContent>\n    </HeroContainer>\n  );\n};\n\nexport default PhotoHero;\n\nconst HeroContainer = styled.div`\n  background: linear-gradient(\n      180deg,\n      rgba(0, 0, 0, 0.5) 0%,\n      rgba(0, 0, 0, 0.2) 35%,\n      rgba(0, 0, 0, 0.01) 100%\n    ),\n    url(${(props) => props.headerBg}) no-repeat center;\n  background-size: cover;\n  height: 60vh;\n  width: 100%;\n  padding: 5rem calc((100vw - 1300px) / 2);\n  color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n\n  :before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;\n    z-index: 2;\n    background: linear-gradient(180deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0.6) 100%),\n      linear-gradient(180deg, rgba(0, 0, 0, 0.2) 0%, transparent 100%);\n  }\n`;\n\nconst HeroContent = styled.div`\n  z-index: 3;\n  height: calc(100vh - 80px);\n  max-height: 100%;\n  padding: 0rem calc((100vw - 1300px) / 2);\n`;\n\nconst HeroItems = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  height: 100vh;\n  max-height: 100%;\n  padding: 0;\n  color: white;\n  line-height: 1.1;\n  font-weight: bold;\n`;\n\nconst HeroH1 = styled.h1`\n  font-size: clamp(1.5rem, 6vw, 4rem);\n  margin-bottom: 1.5rem;\n  letter-spacing: 3px;\n  padding: 0 1rem;\n`;\n","import React from \"react\";\n\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport PhotoHero from \"../components/PhotoHero\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport DoubleColumn, {\n  ColumnImage,\n  TextWrapper,\n  ColumnContainer,\n} from \"../components/DoubleColumn\";\nimport styled from \"styled-components\";\nimport { Button } from \"../components/Button\";\n\nconst services = () => {\n  const { allContentfulComponentPage, allContentfulService } = useStaticQuery(\n    graphql`\n      query {\n        allContentfulComponentPage(filter: { title: { eq: \"Services\" } }) {\n          edges {\n            node {\n              slug\n              sections {\n                ... on ContentfulComponentSeo {\n                  title\n                  ogImage {\n                    file {\n                      url\n                    }\n                  }\n                  description {\n                    description\n                  }\n                  keywords\n                }\n                ... on ContentfulPhotoHero {\n                  title\n                  headerBg {\n                    file {\n                      url\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        allContentfulService {\n          edges {\n            node {\n              slug\n              title\n              description {\n                description\n              }\n              hero {\n                headerBg {\n                  gatsbyImageData\n                }\n              }\n            }\n          }\n        }\n      }\n    `,\n  );\n  const node = allContentfulComponentPage.edges[0].node;\n  const seo = node.sections[0];\n  const photoHero = node.sections[1];\n  const services = allContentfulService.edges;\n\n  const serviceInfo = (service) => {\n    return (\n      <TextWrapper>\n        <h2>{service.node.title}</h2>\n        <p>{service.node.description.description}</p>\n        <ServiceButton to={service.node.slug} primary=\"true\">\n          Learn More\n        </ServiceButton>\n      </TextWrapper>\n    );\n  };\n\n  const serviceImage = (service) => {\n    return (\n      <ColumnImage\n        image={service.node.hero.headerBg.gatsbyImageData}\n        alt={service.node.title + \" Image\"}\n      />\n    );\n  };\n\n  function setServices(services) {\n    const sections = [];\n    services.forEach((item, index) => {\n      sections.push(\n        <DoubleColumn\n          background={index % 2 ? \"#efeff2\" : \"white\"}\n          flipped={index % 2}\n          columnOneContent={serviceInfo(item)}\n          columnTwoContent={serviceImage(item)}\n        />,\n      );\n    });\n    return sections;\n  }\n\n  return (\n    <Layout>\n      <Seo seo={seo} />\n      <PhotoHero heading=\"Services\" headerBg={photoHero.headerBg.file.url} />\n      {/* <Services heading=\"\" /> */}\n      {setServices(services)}\n    </Layout>\n  );\n};\n\nexport default services;\n\nconst ServiceButton = styled(Button)`\n  display: inline-block;\n  font-size=14px;\n`;\n"],"sourceRoot":""}