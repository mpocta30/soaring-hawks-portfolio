{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/Contact.js","webpack://gatsby-starter-default/./src/components/DoubleColumn.js","webpack://gatsby-starter-default/./src/components/PhotoHero.js","webpack://gatsby-starter-default/./src/components/Products.js","webpack://gatsby-starter-default/./src/components/Services.js","webpack://gatsby-starter-default/./src/pages/about.js"],"names":["serviceOptions","sectionBg","title","subtitle","pageName","data","useStaticQuery","ContactContainer","sectionbg","ContactContent","method","netlify-honeypot","data-netlify","name","FormWrap","FormName","type","value","placeholder","id","required","FormOption","disabled","allContentfulService","edges","forEach","item","index","push","key","node","replace","toLowerCase","FormButton","as","primary","styled","props","Button","background","flipped","columnOneContent","columnTwoContent","ContentWrapper","FlippedColumnOneContainer","ColumnContainer","ColumnOneContainer","TextWrapper","ColumnImage","GatsbyImage","heading","headerBg","HeroContainer","HeroContent","HeroItems","HeroH1","products","animation","ProductsContainer","ProductsHeading","style","textTransform","data-sal","data-sal-duration","data-sal-delay","data-sal-easing","ProductsWrapper","numColumns","length","productsArray","ProductCard","toString","href","slug","ProductImg","image","alt","ProductInfo","TextWrap","ProductTitle","ProductDescription","description","ProductButton","to","getProducts","productObj","hero","gatsbyImageData","shortDescription","createProductObj","companyImage","columnInfo","console","log","img","altText","allContentfulComponentPage","seo","sections","photoHero","companySection","contactForm","file","url","columns","text","subTitle"],"mappings":"8KA0EA,IArEgB,SAAC,GAA8C,IAcrDA,EAdSC,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACvCC,GAAOC,oBAAe,cAwB5B,OACE,gBAACC,EAAD,CAAkBC,UAAWP,GAC3B,gBAACQ,EAAD,KACE,0BAAKP,GACL,yBAAIC,GACJ,wBAAMO,OAAO,OAAOC,mBAAiB,YAAYC,eAAa,OAAOC,KAAK,WACxE,gBAACC,EAAD,KACE,gBAACC,EAAD,KACE,yBAAOC,KAAK,SAASH,KAAK,cAC1B,yBAAOG,KAAK,SAASH,KAAK,YAAYI,MAAM,YAC5C,yBAAOD,KAAK,SAASH,KAAK,YAAYI,MAAOb,IAC7C,yBACEY,KAAK,OACLE,YAAY,wBACZC,GAAG,YACHN,KAAK,YACLO,UAAQ,IAEV,yBACEJ,KAAK,OACLE,YAAY,uBACZC,GAAG,WACHN,KAAK,WACLO,UAAQ,KAGZ,yBAAOJ,KAAK,QAAQE,YAAY,mBAAmBC,GAAG,QAAQN,KAAK,QAAQO,UAAQ,IACnF,0BAAQD,GAAG,UAAUN,KAAK,UAAUO,UAAQ,GAC1C,gBAACC,EAAD,CAAYC,UAAQ,EAACL,MAAM,IAA3B,2BAvCJjB,EAAiB,GACvBK,EAAKkB,qBAAqBC,MAAMC,SAAQ,SAACC,EAAMC,GAC7C3B,EAAe4B,KACb,gBAACP,EAAD,CAAYQ,IAAKF,EAAOV,MAAOS,EAAKI,KAAK5B,MAAM6B,QAAQ,OAAQ,KAAKC,eACjEN,EAAKI,KAAK5B,WAIVF,IAoCC,4BAAUmB,GAAG,UAAUD,YAAY,gBAAgBL,KAAK,UAAUO,UAAQ,IAC1E,gBAACa,EAAD,CAAYC,GAAG,SAASC,QAAQ,OAAOnB,KAAK,UAA5C,gBAYZ,IAAMT,EAAmB6B,oBAAH,oEAAGA,CAAH,4KACN,SAACC,GAAD,OACZA,EAAM7B,UAAN,iJAOM6B,EAAM7B,UAPZ,sBAQI,UAKG,SAAC6B,GAAD,OAAYA,EAAM7B,UAAY,QAAU,aAM7CC,EAAiB2B,oBAAH,kEAAGA,CAAH,yQAyBdtB,EAAWsB,oBAAH,4DAAGA,CAAH,8hBAYA,SAACC,GAAD,OAAYA,EAAM7B,UAAY,OAAS,uBA+B/CO,EAAWqB,oBAAH,4DAAGA,CAAH,wJAYRH,GAAaG,QAAOE,KAAV,yEAAGF,CAAH,kJAcVf,EAAae,uBAAH,8DAAGA,CAAH,qB,0HC7KhB,KAdqB,SAAC,GAAiE,IAA/DG,EAA8D,EAA9DA,WAAYC,EAAkD,EAAlDA,QAASC,EAAyC,EAAzCA,iBAAkBC,EAAuB,EAAvBA,iBAC7D,OAAOF,EACL,gBAACG,EAAD,CAAgBJ,WAAYA,GAC1B,gBAACK,EAAD,KAA4BH,GAC5B,gBAACI,EAAD,KAAkBH,IAGpB,gBAACC,EAAD,CAAgBJ,WAAYA,GAC1B,gBAACO,EAAD,KAAqBL,GACrB,gBAACI,EAAD,KAAkBH,KAOxB,IAAMC,EAAiBP,oBAAH,wEAAGA,CAAH,uJACE,SAACC,GAAD,OAAWA,EAAME,cAUjCM,EAAkBT,oBAAH,yEAAGA,CAAH,sNAgBfU,GAAqBV,QAAOS,GAAV,uFAAGT,CAAH,mDAMlBQ,GAA4BR,QAAOS,GAAV,8FAAGT,CAAH,cAIlBW,EAAcX,oBAAH,qEAAGA,CAAH,6KAgBXY,GAAcZ,QAAOa,KAAV,gFAAGb,CAAH,8E,uDC1DxB,IAZkB,SAAC,GAA2B,IAAzBc,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAC5B,OACE,gBAACC,EAAD,CAAeD,SAAUA,GACvB,gBAACE,EAAD,KACE,gBAACC,EAAD,KACE,gBAACC,EAAD,KAASL,OASnB,IAAME,EAAgBhB,oBAAH,gEAAGA,CAAH,igBAOT,SAACC,GAAD,OAAWA,EAAMc,YAwBrBE,EAAcjB,oBAAH,8DAAGA,CAAH,kGAOXkB,EAAYlB,oBAAH,4DAAGA,CAAH,yLAcTmB,EAASnB,mBAAH,yDAAGA,CAAH,+F,2ECCZ,IArBiB,SAAC,GAA+C,IAA7CG,EAA4C,EAA5CA,WAAYiB,EAAgC,EAAhCA,SAAU3C,EAAsB,EAAtBA,KAAM4C,EAAgB,EAAhBA,UAC9C,OACE,2BACE,gBAACC,EAAD,CAAmBvC,GAAIN,EAAM0B,WAAYA,GACvC,gBAACoB,EAAD,CACEC,MAAO,CAAEC,cAAe,cACxBC,WAAUL,EACVM,oBAAkB,OAClBC,iBAAe,MACfC,kBAAgB,QAEfpD,GAEH,gBAACqD,EAAD,CAAiBC,WAAYX,EAASY,QAAU,EAAI,EAAIZ,EAASY,OAAS,GAzDlF,SAAqBZ,EAAUC,GAC7B,IAAMY,EAAgB,GA0BtB,OAzBAb,EAAS/B,SAAQ,SAACC,EAAMC,GACtB0C,EAAczC,KACZ,gBAAC0C,EAAD,CACEzC,IAAKF,EACLmC,WAAUL,EACVM,oBAAkB,OAClBC,kBAAiB,IAAM,IAAMrC,GAAO4C,WACpCN,kBAAgB,OAChBE,WAA+B,GAAnBX,EAASY,OAAc,iBAAmB,IAEtD,qBAAGI,KAAM9C,EAAK+C,MACZ,gBAACC,EAAD,CAAYC,MAAOjD,EAAKiD,MAAOC,IAAKlD,EAAKxB,SAE3C,gBAAC2E,EAAD,KACE,gBAACC,EAAD,KACE,gBAACC,EAAD,KAAerD,EAAKxB,OACpB,gBAAC8E,EAAD,KAAqBtD,EAAKuD,cAE5B,gBAACC,EAAD,CAAeC,GAAIzD,EAAK+C,KAAMtC,QAAQ,QAAtC,oBAODkC,EA+BEe,CA5BX,SAA0B5B,GACxB,IAAMa,EAAgB,GAUtB,OATAb,EAAS/B,SAAQ,SAACC,EAAMC,GACtB,IAAM0D,EAAa,GACnBA,EAAU,MAAY3D,EAAKI,KAAKwD,KAAKnC,SAASoC,gBAC9CF,EAAU,MAAY3D,EAAKI,KAAK5B,MAChCmF,EAAU,YAAkB3D,EAAKI,KAAK0D,iBAAiBA,iBACvDH,EAAU,KAAW3D,EAAKI,KAAK2C,KAE/BJ,EAAczC,KAAKyD,MAEdhB,EAiBcoB,CAAiBjC,GAAWC,OASnD,IAAMC,EAAoBtB,oBAAH,uEAAGA,CAAH,+EACD,SAACC,GAAD,OAAWA,EAAME,cAKjCoB,EAAkBvB,oBAAH,qEAAGA,CAAH,0GAQf8B,EAAkB9B,oBAAH,qEAAGA,CAAH,2SAEa,SAACC,GAAD,OAAWA,EAAM8B,cAmB7CG,EAAclC,oBAAH,iEAAGA,CAAH,4QASX,SAACC,GAAD,OAAWA,EAAM8B,cAajBO,GAAatC,QAAOa,KAAV,2EAAGb,CAAH,kOAiBVyC,EAAczC,oBAAH,iEAAGA,CAAH,+JAaX0C,EAAW1C,oBAAH,8DAAGA,CAAH,2FAOR2C,EAAe3C,mBAAH,kEAAGA,CAAH,0EAMZ4C,EAAqB5C,kBAAH,wEAAGA,CAAH,+CAKlB8C,GAAgB9C,QAAOE,KAAV,8EAAGF,CAAH,2D,oEC3InB,IAlCiB,SAAC,GAAwC,IAAtCc,EAAqC,EAArCA,QAASX,EAA4B,EAA5BA,WAAYkB,EAAgB,EAAhBA,UACjCpD,GAAOC,oBAAe,cAqB5B,OACE,2BACE,gBAAC,IAAD,CACEiC,WAAYA,EACZiB,SAAUnD,EAAKkB,qBAAqBC,MACpCX,KAAMqC,EACNO,UAAWA,O,6HCbbiC,EAAe,SAACC,GAEpB,OADAC,QAAQC,IAAIF,EAAWG,IAAIP,iBACpB,gBAAC,KAAD,CAAaZ,MAAOgB,EAAWG,IAAIP,gBAAiBX,IAAKe,EAAWI,QAAQA,WA8FrF,UA3Fc,WACZ,IAfmBJ,EA+Eb7D,GAhEiCxB,oBAAe,cAA9C0F,2BAgEgCxE,MAAM,GAAGM,KAC3CmE,EAAMnE,EAAKoE,SAAS,GACpBC,EAAYrE,EAAKoE,SAAS,GAC1BE,EAAiBtE,EAAKoE,SAAS,GAC/BG,EAAcvE,EAAKoE,SAAS,GAElC,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKD,IAAKA,IACV,gBAAC,IAAD,CAAW/C,QAASiD,EAAUjG,MAAOiD,SAAUgD,EAAUhD,SAASmD,KAAKC,MACvE,gBAAC,KAAD,CACEhE,WAAW,QACXE,kBA3FakD,EA2FiBS,EAAeI,QAAQ,GAzFzD,gBAAC,KAAD,KACE,0BAAKb,EAAWzC,SAChB,yBAAIyC,EAAWc,KAAKA,QAwFlB/D,iBAAkBgD,EAAaU,EAAeI,QAAQ,MAExD,gBAAC,IAAD,CAAUjE,WAAW,UAAUW,QAAQ,aACvC,gBAAC,IAAD,CACEhD,MAAOmG,EAAYnG,MACnBC,SAAUkG,EAAYK,SACtBtG,SAAUiG,EAAYjG,SACtBH,UAAWoG,EAAY9D,WAAW+D,KAAKC","file":"component---src-pages-about-js-65adc50349f822e538ac.js","sourcesContent":["import { useStaticQuery, graphql } from \"gatsby\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"./Button\";\n\nconst Contact = ({ sectionBg, title, subtitle, pageName }) => {\n  const data = useStaticQuery(graphql`\n    query contactFormQuery {\n      allContentfulService {\n        edges {\n          node {\n            title\n          }\n        }\n      }\n    }\n  `);\n\n  function getServiceOptions() {\n    const serviceOptions = [];\n    data.allContentfulService.edges.forEach((item, index) => {\n      serviceOptions.push(\n        <FormOption key={index} value={item.node.title.replace(/\\s+/g, \"-\").toLowerCase()}>\n          {item.node.title}\n        </FormOption>,\n      );\n    });\n    return serviceOptions;\n  }\n\n  return (\n    <ContactContainer sectionbg={sectionBg}>\n      <ContactContent>\n        <h1>{title}</h1>\n        <p>{subtitle}</p>\n        <form method=\"post\" netlify-honeypot=\"bot-field\" data-netlify=\"true\" name=\"contact\">\n          <FormWrap>\n            <FormName>\n              <input type=\"hidden\" name=\"bot-field\" />\n              <input type=\"hidden\" name=\"form-name\" value=\"contact\" />\n              <input type=\"hidden\" name=\"page-name\" value={pageName} />\n              <input\n                type=\"text\"\n                placeholder=\"Enter your first name\"\n                id=\"firstname\"\n                name=\"firstname\"\n                required\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Enter your last name\"\n                id=\"lastname\"\n                name=\"lastname\"\n                required\n              />\n            </FormName>\n            <input type=\"email\" placeholder=\"Enter your email\" id=\"email\" name=\"email\" required />\n            <select id=\"subject\" name=\"subject\" required>\n              <FormOption disabled value=\"\">\n                -- Select a Service --\n              </FormOption>\n              {getServiceOptions()}\n            </select>\n            <textarea id=\"message\" placeholder=\"Enter Message\" name=\"message\" required />\n            <FormButton as=\"button\" primary=\"true\" type=\"submit\">\n              Sign Up\n            </FormButton>\n          </FormWrap>\n        </form>\n      </ContactContent>\n    </ContactContainer>\n  );\n};\n\nexport default Contact;\n\nconst ContactContainer = styled.div`\n  background: ${(props) =>\n    props.sectionbg\n      ? `linear-gradient(\n      180deg,\n      rgba(0, 0, 0, 0.5) 0%,\n      rgba(0, 0, 0, 0.2) 35%,\n      rgba(0, 0, 0, 0.01) 100%\n    ),\n    url(${props.sectionbg}) no-repeat center;`\n      : \"none\"};\n  background-size: cover;\n  height: 600px;\n  width: 100%;\n  padding: 5rem calc((100vw - 1300px) / 2);\n  color: ${(props) => (props.sectionbg ? \"white\" : \"#263b46\")};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ContactContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  h1 {\n    text-align: center;\n    margin-bottom: 1rem;\n    font-size: clamp(1rem, 5vw, 3rem);\n    padding: 0 1rem;\n  }\n\n  p {\n    text-align: center;\n    margin-bottom: 2rem;\n    font-size: clamp(1rem, 2.5vw, 1.5rem);\n    padding: 0 1rem;\n  }\n\n  form {\n    width: 100%;\n    z-index: 10;\n  }\n`;\n\nconst FormWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0 1rem;\n  width: 100%;\n\n  input,\n  textarea,\n  select {\n    padding: 1rem 1.5rem;\n    outline: none;\n    width: 100%;\n    border: ${(props) => (props.sectionbg ? \"none\" : \"1px solid #e5e6e9\")};\n    margin-bottom: 1rem;\n  }\n\n  input,\n  select {\n    height: 48px;\n  }\n\n  select {\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    padding: 7px 40px 7px 12px;\n    width: 100%;\n    border: 1px solid #e8eaed;\n    background-color: white;\n    box-shadow: 0 1px 3px -2px #9098a9;\n    cursor: pointer;\n    font-family: inherit;\n    transition: all 150ms ease;\n    text-indent: 10px;\n  }\n\n  textarea {\n    height: 100px;\n  }\n`;\n\nconst FormName = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 1rem;\n\n  @media screen and (max-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    grid-gap: 0;\n  }\n`;\n\nconst FormButton = styled(Button)`\n  height: 48px;\n\n  @media screen and (max-width: 768px) {\n    width: 100%;\n    min-width: 350px;\n  }\n\n  @media screen and (max-width: 400px) {\n    width: 100%;\n    min-width: 250px;\n  }\n`;\n\nconst FormOption = styled.option`\n  color: #223254;\n`;\n","import { GatsbyImage } from \"gatsby-plugin-image\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst DoubleColumn = ({ background, flipped, columnOneContent, columnTwoContent }) => {\n  return flipped ? (\n    <ContentWrapper background={background}>\n      <FlippedColumnOneContainer>{columnOneContent}</FlippedColumnOneContainer>\n      <ColumnContainer>{columnTwoContent}</ColumnContainer>\n    </ContentWrapper>\n  ) : (\n    <ContentWrapper background={background}>\n      <ColumnOneContainer>{columnOneContent}</ColumnOneContainer>\n      <ColumnContainer>{columnTwoContent}</ColumnContainer>\n    </ContentWrapper>\n  );\n};\n\nexport default DoubleColumn;\n\nconst ContentWrapper = styled.div`\n  background-color: ${(props) => props.background};\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  padding: 5rem 2rem;\n\n  @media screen and (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst ColumnContainer = styled.div`\n  margin: 2rem 4rem;\n  position: relative;\n  padding-top: 1rem;\n  padding-right: 2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (max-width: 768px) {\n    text-align: center;\n    padding: 0;\n    margin: 2rem 0rem;\n  }\n`;\n\nconst ColumnOneContainer = styled(ColumnContainer)`\n  @media screen and (max-width: 768px) {\n    order: 2;\n  }\n`;\n\nconst FlippedColumnOneContainer = styled(ColumnContainer)`\n  order: 2;\n`;\n\nexport const TextWrapper = styled.div`\n  justify-content: center;\n  align-items: center;\n\n  h2 {\n    margin-bottom: 1rem;\n    font-size: clamp(1rem, 5vw, 2rem);\n  }\n\n  p {\n    color: #3b3b3b;\n    margin-bottom: 2rem;\n    font-size: clamp(1rem, 1.5vw, 1.5rem);\n  }\n`;\n\nexport const ColumnImage = styled(GatsbyImage)`\n  display: flex;\n  border-radius: 10px;\n  width: 100%;\n  max-width: 550px;\n  height: auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst PhotoHero = ({ heading, headerBg }) => {\n  return (\n    <HeroContainer headerBg={headerBg}>\n      <HeroContent>\n        <HeroItems>\n          <HeroH1>{heading}</HeroH1>\n        </HeroItems>\n      </HeroContent>\n    </HeroContainer>\n  );\n};\n\nexport default PhotoHero;\n\nconst HeroContainer = styled.div`\n  background: linear-gradient(\n      180deg,\n      rgba(0, 0, 0, 0.5) 0%,\n      rgba(0, 0, 0, 0.2) 35%,\n      rgba(0, 0, 0, 0.01) 100%\n    ),\n    url(${(props) => props.headerBg}) no-repeat center;\n  background-size: cover;\n  height: 60vh;\n  width: 100%;\n  padding: 5rem calc((100vw - 1300px) / 2);\n  color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n\n  :before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;\n    z-index: 2;\n    background: linear-gradient(180deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0.6) 100%),\n      linear-gradient(180deg, rgba(0, 0, 0, 0.2) 0%, transparent 100%);\n  }\n`;\n\nconst HeroContent = styled.div`\n  z-index: 3;\n  height: calc(100vh - 80px);\n  max-height: 100%;\n  padding: 0rem calc((100vw - 1300px) / 2);\n`;\n\nconst HeroItems = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  height: 100vh;\n  max-height: 100%;\n  padding: 0;\n  color: white;\n  line-height: 1.1;\n  font-weight: bold;\n`;\n\nconst HeroH1 = styled.h1`\n  font-size: clamp(1.5rem, 6vw, 4rem);\n  margin-bottom: 1.5rem;\n  letter-spacing: 3px;\n  padding: 0 1rem;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport { Button } from \"../components/Button\";\n\nfunction getProducts(products, animation) {\n  const productsArray = [];\n  products.forEach((item, index) => {\n    productsArray.push(\n      <ProductCard\n        key={index}\n        data-sal={animation}\n        data-sal-duration=\"1000\"\n        data-sal-delay={(300 + 200 * index).toString()}\n        data-sal-easing=\"ease\"\n        numColumns={products.length == 1 ? \"max-width: 75%\" : \"\"}\n      >\n        <a href={item.slug}>\n          <ProductImg image={item.image} alt={item.title} />\n        </a>\n        <ProductInfo>\n          <TextWrap>\n            <ProductTitle>{item.title}</ProductTitle>\n            <ProductDescription>{item.description}</ProductDescription>\n          </TextWrap>\n          <ProductButton to={item.slug} primary=\"true\">\n            Learn More\n          </ProductButton>\n        </ProductInfo>\n      </ProductCard>,\n    );\n  });\n  return productsArray;\n}\n\nfunction createProductObj(products) {\n  const productsArray = [];\n  products.forEach((item, index) => {\n    const productObj = {};\n    productObj[\"image\"] = item.node.hero.headerBg.gatsbyImageData;\n    productObj[\"title\"] = item.node.title;\n    productObj[\"description\"] = item.node.shortDescription.shortDescription;\n    productObj[\"slug\"] = item.node.slug;\n\n    productsArray.push(productObj);\n  });\n  return productsArray;\n}\n\nconst Products = ({ background, products, name, animation }) => {\n  return (\n    <div>\n      <ProductsContainer id={name} background={background}>\n        <ProductsHeading\n          style={{ textTransform: \"capitalize\" }}\n          data-sal={animation}\n          data-sal-duration=\"1000\"\n          data-sal-delay=\"300\"\n          data-sal-easing=\"ease\"\n        >\n          {name}\n        </ProductsHeading>\n        <ProductsWrapper numColumns={products.length >= 4 ? 4 : products.length % 4}>\n          {getProducts(createProductObj(products), animation)}\n        </ProductsWrapper>\n      </ProductsContainer>\n    </div>\n  );\n};\n\nexport default Products;\n\nconst ProductsContainer = styled.div`\n  background-color: ${(props) => props.background};\n  padding: 5rem calc((100vw - 1600px) / 2);\n  color: black;\n`;\n\nconst ProductsHeading = styled.div`\n  font-size: clamp(1.5rem, 6vw, 2.5rem);\n  font-weight: bold;\n  text-align: center;\n  margin-bottom: 3rem;\n  color: #000;\n`;\n\nconst ProductsWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${(props) => props.numColumns}, 1fr);\n  grid-gap: 3rem;\n  justify-items: center;\n  padding: 0 2rem;\n\n  @media screen and (max-width: 1200px) {\n    grid-template-columns: 1fr 1fr;\n  }\n\n  @media screen and (max-width: 768px) {\n    grid-template-columns: 1fr;\n    grid-gap: 5rem;\n  }\n\n  @media screen and (max-width: 767px) {\n    padding: 0;\n  }\n`;\n\nconst ProductCard = styled.div`\n  line-height: 2;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  border-radius: 10px;\n  transition: 0.2s ease;\n\n  @media screen and (min-width: 769px) {\n    ${(props) => props.numColumns};\n  }\n\n  @media screen and (max-width: 768px) {\n    padding-top: 1rem;\n    text-align: center;\n  }\n\n  @media screen and (max-width: 400px) {\n    min-height: 450px;\n  }\n`;\n\nconst ProductImg = styled(GatsbyImage)`\n  height: 55%;\n  max-width: 100%;\n  position: relative;\n  border-radius: 10px;\n  filter: brightness(100%);\n  transition: 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);\n\n  &:hover {\n    filter: brightness(130%);\n  }\n\n  @media screen and (max-width: 768px) {\n    max-width: 80%;\n  }\n`;\n\nconst ProductInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  padding: 0 1rem;\n\n  @media screen and (max-width: 768px) {\n    padding: 0 1rem;\n    display: block;\n  }\n`;\n\nconst TextWrap = styled.div`\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n`;\n\nconst ProductTitle = styled.h2`\n  font-weight: 500;\n  font-size: clamp(1.2rem, 5vw, 2rem);\n  margin: 0.5rem 3rem;\n`;\n\nconst ProductDescription = styled.p`\n  font-style: italic;\n  margin: 0.5rem 0 1rem 0;\n`;\n\nconst ProductButton = styled(Button)`\n  display: inline-block;\n  margin-top: 1rem;\n  font-size=14px;\n`;\n","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Products from \"./Products\";\n\nconst Services = ({ heading, background, animation }) => {\n  const data = useStaticQuery(graphql`\n    query ServicesQuery {\n      allContentfulService {\n        edges {\n          node {\n            slug\n            title\n            shortDescription {\n              shortDescription\n            }\n            hero {\n              headerBg {\n                gatsbyImageData\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <div>\n      <Products\n        background={background}\n        products={data.allContentfulService.edges}\n        name={heading}\n        animation={animation}\n      />\n    </div>\n  );\n};\n\nexport default Services;\n","import React from \"react\";\n\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport PhotoHero from \"../components/PhotoHero\";\nimport DoubleColumn, { ColumnImage, TextWrapper } from \"../components/DoubleColumn\";\nimport Services from \"../components/Services\";\nimport Contact from \"../components/Contact\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nconst companyInfo = (columnInfo) => {\n  return (\n    <TextWrapper>\n      <h2>{columnInfo.heading}</h2>\n      <p>{columnInfo.text.text}</p>\n    </TextWrapper>\n  );\n};\n\nconst companyImage = (columnInfo) => {\n  console.log(columnInfo.img.gatsbyImageData);\n  return <ColumnImage image={columnInfo.img.gatsbyImageData} alt={columnInfo.altText.altText} />;\n};\n\nconst about = () => {\n  const { allContentfulComponentPage } = useStaticQuery(\n    graphql`\n      query {\n        allContentfulComponentPage(filter: { title: { eq: \"About Us\" } }) {\n          edges {\n            node {\n              slug\n              sections {\n                ... on ContentfulComponentSeo {\n                  title\n                  ogImage {\n                    file {\n                      url\n                    }\n                  }\n                  description {\n                    description\n                  }\n                  keywords\n                }\n                ... on ContentfulPhotoHero {\n                  title\n                  headerBg {\n                    file {\n                      url\n                    }\n                  }\n                }\n                ... on ContentfulContactForm {\n                  title\n                  subTitle\n                  pageName\n                  background {\n                    file {\n                      url\n                    }\n                  }\n                }\n                ... on ContentfulComponentSection {\n                  columns {\n                    ... on ContentfulComponentText {\n                      heading\n                      text {\n                        text\n                      }\n                    }\n                    ... on ContentfulComponentPhoto {\n                      id\n                      altText {\n                        altText\n                      }\n                      img {\n                        gatsbyImageData\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    `,\n  );\n  const node = allContentfulComponentPage.edges[0].node;\n  const seo = node.sections[0];\n  const photoHero = node.sections[1];\n  const companySection = node.sections[2];\n  const contactForm = node.sections[3];\n\n  return (\n    <Layout>\n      <Seo seo={seo} />\n      <PhotoHero heading={photoHero.title} headerBg={photoHero.headerBg.file.url} />\n      <DoubleColumn\n        background=\"white\"\n        columnOneContent={companyInfo(companySection.columns[0])}\n        columnTwoContent={companyImage(companySection.columns[1])}\n      />\n      <Services background=\"#efeff2\" heading=\"Services\" />\n      <Contact\n        title={contactForm.title}\n        subtitle={contactForm.subTitle}\n        pageName={contactForm.pageName}\n        sectionBg={contactForm.background.file.url}\n      />\n    </Layout>\n  );\n};\n\nexport default about;\n"],"sourceRoot":""}