{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/Contact.js","webpack://gatsby-starter-default/./src/components/DoubleColumn.js","webpack://gatsby-starter-default/./src/components/PhotoHero.js","webpack://gatsby-starter-default/./src/components/Products.js","webpack://gatsby-starter-default/./src/components/Services.js","webpack://gatsby-starter-default/./src/pages/about.js"],"names":["serviceOptions","sectionBg","title","subtitle","pageName","data","useStaticQuery","ContactContainer","sectionbg","ContactContent","method","netlify-honeypot","data-netlify","name","FormWrap","FormName","type","value","placeholder","id","required","FormOption","disabled","allContentfulService","edges","forEach","item","index","push","key","node","replace","toLowerCase","FormButton","as","primary","styled","props","Button","background","flipped","columnOneContent","columnTwoContent","ContentWrapper","FlippedColumnOneContainer","ColumnContainer","ColumnOneContainer","TextWrapper","ColumnImage","GatsbyImage","heading","headerBg","HeroContainer","HeroContent","HeroItems","HeroH1","products","animation","ProductsContainer","ProductsHeading","style","textTransform","data-sal","data-sal-duration","data-sal-delay","data-sal-easing","ProductsWrapper","numColumns","length","productsArray","ProductCard","toString","href","slug","ProductImg","image","alt","ProductInfo","TextWrap","ProductTitle","ProductDescription","description","ProductButton","to","getProducts","productObj","hero","gatsbyImageData","shortDescription","createProductObj","companyImage","columnInfo","console","log","img","altText","allContentfulComponentPage","seo","sections","photoHero","companySection","contactForm","file","url","columns","text","subTitle"],"mappings":"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","file":"component---src-pages-about-js-65adc50349f822e538ac.js","sourcesContent":["import { useStaticQuery, graphql } from \"gatsby\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"./Button\";\r\n\r\nconst Contact = ({ sectionBg, title, subtitle, pageName }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query contactFormQuery {\r\n      allContentfulService {\r\n        edges {\r\n          node {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  function getServiceOptions() {\r\n    const serviceOptions = [];\r\n    data.allContentfulService.edges.forEach((item, index) => {\r\n      serviceOptions.push(\r\n        <FormOption key={index} value={item.node.title.replace(/\\s+/g, \"-\").toLowerCase()}>\r\n          {item.node.title}\r\n        </FormOption>,\r\n      );\r\n    });\r\n    return serviceOptions;\r\n  }\r\n\r\n  return (\r\n    <ContactContainer sectionbg={sectionBg}>\r\n      <ContactContent>\r\n        <h1>{title}</h1>\r\n        <p>{subtitle}</p>\r\n        <form method=\"post\" netlify-honeypot=\"bot-field\" data-netlify=\"true\" name=\"contact\">\r\n          <FormWrap>\r\n            <FormName>\r\n              <input type=\"hidden\" name=\"bot-field\" />\r\n              <input type=\"hidden\" name=\"form-name\" value=\"contact\" />\r\n              <input type=\"hidden\" name=\"page-name\" value={pageName} />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Enter your first name\"\r\n                id=\"firstname\"\r\n                name=\"firstname\"\r\n                required\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Enter your last name\"\r\n                id=\"lastname\"\r\n                name=\"lastname\"\r\n                required\r\n              />\r\n            </FormName>\r\n            <input type=\"email\" placeholder=\"Enter your email\" id=\"email\" name=\"email\" required />\r\n            <select id=\"subject\" name=\"subject\" required>\r\n              <FormOption disabled value=\"\">\r\n                -- Select a Service --\r\n              </FormOption>\r\n              {getServiceOptions()}\r\n            </select>\r\n            <textarea id=\"message\" placeholder=\"Enter Message\" name=\"message\" required />\r\n            <FormButton as=\"button\" primary=\"true\" type=\"submit\">\r\n              Sign Up\r\n            </FormButton>\r\n          </FormWrap>\r\n        </form>\r\n      </ContactContent>\r\n    </ContactContainer>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n\r\nconst ContactContainer = styled.div`\r\n  background: ${(props) =>\r\n    props.sectionbg\r\n      ? `linear-gradient(\r\n      180deg,\r\n      rgba(0, 0, 0, 0.5) 0%,\r\n      rgba(0, 0, 0, 0.2) 35%,\r\n      rgba(0, 0, 0, 0.01) 100%\r\n    ),\r\n    url(${props.sectionbg}) no-repeat center;`\r\n      : \"none\"};\r\n  background-size: cover;\r\n  height: 600px;\r\n  width: 100%;\r\n  padding: 5rem calc((100vw - 1300px) / 2);\r\n  color: ${(props) => (props.sectionbg ? \"white\" : \"#263b46\")};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ContactContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  h1 {\r\n    text-align: center;\r\n    margin-bottom: 1rem;\r\n    font-size: clamp(1rem, 5vw, 3rem);\r\n    padding: 0 1rem;\r\n  }\r\n\r\n  p {\r\n    text-align: center;\r\n    margin-bottom: 2rem;\r\n    font-size: clamp(1rem, 2.5vw, 1.5rem);\r\n    padding: 0 1rem;\r\n  }\r\n\r\n  form {\r\n    width: 100%;\r\n    z-index: 10;\r\n  }\r\n`;\r\n\r\nconst FormWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0 1rem;\r\n  width: 100%;\r\n\r\n  input,\r\n  textarea,\r\n  select {\r\n    padding: 1rem 1.5rem;\r\n    outline: none;\r\n    width: 100%;\r\n    border: ${(props) => (props.sectionbg ? \"none\" : \"1px solid #e5e6e9\")};\r\n    margin-bottom: 1rem;\r\n  }\r\n\r\n  input,\r\n  select {\r\n    height: 48px;\r\n  }\r\n\r\n  select {\r\n    -webkit-box-sizing: border-box;\r\n    -moz-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n    padding: 7px 40px 7px 12px;\r\n    width: 100%;\r\n    border: 1px solid #e8eaed;\r\n    background-color: white;\r\n    box-shadow: 0 1px 3px -2px #9098a9;\r\n    cursor: pointer;\r\n    font-family: inherit;\r\n    transition: all 150ms ease;\r\n    text-indent: 10px;\r\n  }\r\n\r\n  textarea {\r\n    height: 100px;\r\n  }\r\n`;\r\n\r\nconst FormName = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-gap: 1rem;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    grid-gap: 0;\r\n  }\r\n`;\r\n\r\nconst FormButton = styled(Button)`\r\n  height: 48px;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    width: 100%;\r\n    min-width: 350px;\r\n  }\r\n\r\n  @media screen and (max-width: 400px) {\r\n    width: 100%;\r\n    min-width: 250px;\r\n  }\r\n`;\r\n\r\nconst FormOption = styled.option`\r\n  color: #223254;\r\n`;\r\n","import { GatsbyImage } from \"gatsby-plugin-image\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst DoubleColumn = ({ background, flipped, columnOneContent, columnTwoContent }) => {\r\n  return flipped ? (\r\n    <ContentWrapper background={background}>\r\n      <FlippedColumnOneContainer>{columnOneContent}</FlippedColumnOneContainer>\r\n      <ColumnContainer>{columnTwoContent}</ColumnContainer>\r\n    </ContentWrapper>\r\n  ) : (\r\n    <ContentWrapper background={background}>\r\n      <ColumnOneContainer>{columnOneContent}</ColumnOneContainer>\r\n      <ColumnContainer>{columnTwoContent}</ColumnContainer>\r\n    </ContentWrapper>\r\n  );\r\n};\r\n\r\nexport default DoubleColumn;\r\n\r\nconst ContentWrapper = styled.div`\r\n  background-color: ${(props) => props.background};\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  padding: 5rem 2rem;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nconst ColumnContainer = styled.div`\r\n  margin: 2rem 4rem;\r\n  position: relative;\r\n  padding-top: 1rem;\r\n  padding-right: 2rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    text-align: center;\r\n    padding: 0;\r\n    margin: 2rem 0rem;\r\n  }\r\n`;\r\n\r\nconst ColumnOneContainer = styled(ColumnContainer)`\r\n  @media screen and (max-width: 768px) {\r\n    order: 2;\r\n  }\r\n`;\r\n\r\nconst FlippedColumnOneContainer = styled(ColumnContainer)`\r\n  order: 2;\r\n`;\r\n\r\nexport const TextWrapper = styled.div`\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  h2 {\r\n    margin-bottom: 1rem;\r\n    font-size: clamp(1rem, 5vw, 2rem);\r\n  }\r\n\r\n  p {\r\n    color: #3b3b3b;\r\n    margin-bottom: 2rem;\r\n    font-size: clamp(1rem, 1.5vw, 1.5rem);\r\n  }\r\n`;\r\n\r\nexport const ColumnImage = styled(GatsbyImage)`\r\n  display: flex;\r\n  border-radius: 10px;\r\n  width: 100%;\r\n  max-width: 550px;\r\n  height: auto;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst PhotoHero = ({ heading, headerBg }) => {\r\n  return (\r\n    <HeroContainer headerBg={headerBg}>\r\n      <HeroContent>\r\n        <HeroItems>\r\n          <HeroH1>{heading}</HeroH1>\r\n        </HeroItems>\r\n      </HeroContent>\r\n    </HeroContainer>\r\n  );\r\n};\r\n\r\nexport default PhotoHero;\r\n\r\nconst HeroContainer = styled.div`\r\n  background: linear-gradient(\r\n      180deg,\r\n      rgba(0, 0, 0, 0.5) 0%,\r\n      rgba(0, 0, 0, 0.2) 35%,\r\n      rgba(0, 0, 0, 0.01) 100%\r\n    ),\r\n    url(${(props) => props.headerBg}) no-repeat center;\r\n  background-size: cover;\r\n  height: 60vh;\r\n  width: 100%;\r\n  padding: 5rem calc((100vw - 1300px) / 2);\r\n  color: white;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  :before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    left: 0;\r\n    z-index: 2;\r\n    background: linear-gradient(180deg, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0.6) 100%),\r\n      linear-gradient(180deg, rgba(0, 0, 0, 0.2) 0%, transparent 100%);\r\n  }\r\n`;\r\n\r\nconst HeroContent = styled.div`\r\n  z-index: 3;\r\n  height: calc(100vh - 80px);\r\n  max-height: 100%;\r\n  padding: 0rem calc((100vw - 1300px) / 2);\r\n`;\r\n\r\nconst HeroItems = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  height: 100vh;\r\n  max-height: 100%;\r\n  padding: 0;\r\n  color: white;\r\n  line-height: 1.1;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst HeroH1 = styled.h1`\r\n  font-size: clamp(1.5rem, 6vw, 4rem);\r\n  margin-bottom: 1.5rem;\r\n  letter-spacing: 3px;\r\n  padding: 0 1rem;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GatsbyImage } from \"gatsby-plugin-image\";\r\nimport { Button } from \"../components/Button\";\r\n\r\nfunction getProducts(products, animation) {\r\n  const productsArray = [];\r\n  products.forEach((item, index) => {\r\n    productsArray.push(\r\n      <ProductCard\r\n        key={index}\r\n        data-sal={animation}\r\n        data-sal-duration=\"1000\"\r\n        data-sal-delay={(300 + 200 * index).toString()}\r\n        data-sal-easing=\"ease\"\r\n        numColumns={products.length == 1 ? \"max-width: 75%\" : \"\"}\r\n      >\r\n        <a href={item.slug}>\r\n          <ProductImg image={item.image} alt={item.title} />\r\n        </a>\r\n        <ProductInfo>\r\n          <TextWrap>\r\n            <ProductTitle>{item.title}</ProductTitle>\r\n            <ProductDescription>{item.description}</ProductDescription>\r\n          </TextWrap>\r\n          <ProductButton to={item.slug} primary=\"true\">\r\n            Learn More\r\n          </ProductButton>\r\n        </ProductInfo>\r\n      </ProductCard>,\r\n    );\r\n  });\r\n  return productsArray;\r\n}\r\n\r\nfunction createProductObj(products) {\r\n  const productsArray = [];\r\n  products.forEach((item, index) => {\r\n    const productObj = {};\r\n    productObj[\"image\"] = item.node.hero.headerBg.gatsbyImageData;\r\n    productObj[\"title\"] = item.node.title;\r\n    productObj[\"description\"] = item.node.shortDescription.shortDescription;\r\n    productObj[\"slug\"] = item.node.slug;\r\n\r\n    productsArray.push(productObj);\r\n  });\r\n  return productsArray;\r\n}\r\n\r\nconst Products = ({ background, products, name, animation }) => {\r\n  return (\r\n    <div>\r\n      <ProductsContainer id={name} background={background}>\r\n        <ProductsHeading\r\n          style={{ textTransform: \"capitalize\" }}\r\n          data-sal={animation}\r\n          data-sal-duration=\"1000\"\r\n          data-sal-delay=\"300\"\r\n          data-sal-easing=\"ease\"\r\n        >\r\n          {name}\r\n        </ProductsHeading>\r\n        <ProductsWrapper numColumns={products.length >= 4 ? 4 : products.length % 4}>\r\n          {getProducts(createProductObj(products), animation)}\r\n        </ProductsWrapper>\r\n      </ProductsContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n\r\nconst ProductsContainer = styled.div`\r\n  background-color: ${(props) => props.background};\r\n  padding: 5rem calc((100vw - 1600px) / 2);\r\n  color: black;\r\n`;\r\n\r\nconst ProductsHeading = styled.div`\r\n  font-size: clamp(1.5rem, 6vw, 2.5rem);\r\n  font-weight: bold;\r\n  text-align: center;\r\n  margin-bottom: 3rem;\r\n  color: #000;\r\n`;\r\n\r\nconst ProductsWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(${(props) => props.numColumns}, 1fr);\r\n  grid-gap: 3rem;\r\n  justify-items: center;\r\n  padding: 0 2rem;\r\n\r\n  @media screen and (max-width: 1200px) {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    grid-template-columns: 1fr;\r\n    grid-gap: 5rem;\r\n  }\r\n\r\n  @media screen and (max-width: 767px) {\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nconst ProductCard = styled.div`\r\n  line-height: 2;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  border-radius: 10px;\r\n  transition: 0.2s ease;\r\n\r\n  @media screen and (min-width: 769px) {\r\n    ${(props) => props.numColumns};\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    padding-top: 1rem;\r\n    text-align: center;\r\n  }\r\n\r\n  @media screen and (max-width: 400px) {\r\n    min-height: 450px;\r\n  }\r\n`;\r\n\r\nconst ProductImg = styled(GatsbyImage)`\r\n  height: 55%;\r\n  max-width: 100%;\r\n  position: relative;\r\n  border-radius: 10px;\r\n  filter: brightness(100%);\r\n  transition: 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);\r\n\r\n  &:hover {\r\n    filter: brightness(130%);\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    max-width: 80%;\r\n  }\r\n`;\r\n\r\nconst ProductInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-align: center;\r\n  padding: 0 1rem;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    padding: 0 1rem;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst TextWrap = styled.div`\r\n  overflow: hidden;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 3;\r\n  -webkit-box-orient: vertical;\r\n`;\r\n\r\nconst ProductTitle = styled.h2`\r\n  font-weight: 500;\r\n  font-size: clamp(1.2rem, 5vw, 2rem);\r\n  margin: 0.5rem 3rem;\r\n`;\r\n\r\nconst ProductDescription = styled.p`\r\n  font-style: italic;\r\n  margin: 0.5rem 0 1rem 0;\r\n`;\r\n\r\nconst ProductButton = styled(Button)`\r\n  display: inline-block;\r\n  margin-top: 1rem;\r\n  font-size=14px;\r\n`;\r\n","import React from \"react\";\r\nimport { useStaticQuery, graphql } from \"gatsby\";\r\nimport Products from \"./Products\";\r\n\r\nconst Services = ({ heading, background, animation }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query ServicesQuery {\r\n      allContentfulService {\r\n        edges {\r\n          node {\r\n            slug\r\n            title\r\n            shortDescription {\r\n              shortDescription\r\n            }\r\n            hero {\r\n              headerBg {\r\n                gatsbyImageData\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  return (\r\n    <div>\r\n      <Products\r\n        background={background}\r\n        products={data.allContentfulService.edges}\r\n        name={heading}\r\n        animation={animation}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Services;\r\n","import React from \"react\";\r\n\r\nimport Layout from \"../components/layout\";\r\nimport Seo from \"../components/seo\";\r\nimport PhotoHero from \"../components/PhotoHero\";\r\nimport DoubleColumn, { ColumnImage, TextWrapper } from \"../components/DoubleColumn\";\r\nimport Services from \"../components/Services\";\r\nimport Contact from \"../components/Contact\";\r\nimport { useStaticQuery, graphql } from \"gatsby\";\r\n\r\nconst companyInfo = (columnInfo) => {\r\n  return (\r\n    <TextWrapper>\r\n      <h2>{columnInfo.heading}</h2>\r\n      <p>{columnInfo.text.text}</p>\r\n    </TextWrapper>\r\n  );\r\n};\r\n\r\nconst companyImage = (columnInfo) => {\r\n  console.log(columnInfo.img.gatsbyImageData);\r\n  return <ColumnImage image={columnInfo.img.gatsbyImageData} alt={columnInfo.altText.altText} />;\r\n};\r\n\r\nconst about = () => {\r\n  const { allContentfulComponentPage } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        allContentfulComponentPage(filter: { title: { eq: \"About Us\" } }) {\r\n          edges {\r\n            node {\r\n              slug\r\n              sections {\r\n                ... on ContentfulComponentSeo {\r\n                  title\r\n                  ogImage {\r\n                    file {\r\n                      url\r\n                    }\r\n                  }\r\n                  description {\r\n                    description\r\n                  }\r\n                  keywords\r\n                }\r\n                ... on ContentfulPhotoHero {\r\n                  title\r\n                  headerBg {\r\n                    file {\r\n                      url\r\n                    }\r\n                  }\r\n                }\r\n                ... on ContentfulContactForm {\r\n                  title\r\n                  subTitle\r\n                  pageName\r\n                  background {\r\n                    file {\r\n                      url\r\n                    }\r\n                  }\r\n                }\r\n                ... on ContentfulComponentSection {\r\n                  columns {\r\n                    ... on ContentfulComponentText {\r\n                      heading\r\n                      text {\r\n                        text\r\n                      }\r\n                    }\r\n                    ... on ContentfulComponentPhoto {\r\n                      id\r\n                      altText {\r\n                        altText\r\n                      }\r\n                      img {\r\n                        gatsbyImageData\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `,\r\n  );\r\n  const node = allContentfulComponentPage.edges[0].node;\r\n  const seo = node.sections[0];\r\n  const photoHero = node.sections[1];\r\n  const companySection = node.sections[2];\r\n  const contactForm = node.sections[3];\r\n\r\n  return (\r\n    <Layout>\r\n      <Seo seo={seo} />\r\n      <PhotoHero heading={photoHero.title} headerBg={photoHero.headerBg.file.url} />\r\n      <DoubleColumn\r\n        background=\"white\"\r\n        columnOneContent={companyInfo(companySection.columns[0])}\r\n        columnTwoContent={companyImage(companySection.columns[1])}\r\n      />\r\n      <Services background=\"#efeff2\" heading=\"Services\" />\r\n      <Contact\r\n        title={contactForm.title}\r\n        subtitle={contactForm.subTitle}\r\n        pageName={contactForm.pageName}\r\n        sectionBg={contactForm.background.file.url}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default about;\r\n"],"sourceRoot":""}